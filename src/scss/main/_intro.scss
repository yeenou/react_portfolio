#intro {
  width: 100%; height: 100vh; background: #272727; padding: 150px 0px;


  border: 2px solid red;

  .inner {
    width: 1180px; margin: 0px auto;



    border: 2px solid red;

    h1 {
      font: bold 22px/1 'arial'; color: #333; text-align: center; margin-bottom: 50px;
    }

    ul {
      width: 100%; display: flex; justify-content: space-between;
      align-items: flex-start; margin-bottom: 50px;

      li {
        width: 32%; height: 200px; padding: 30px;

        .pic  {
          width: 100%; height: 100px; overflow: hidden;

          img {
            width: 100%; height: 100%; object-fit: cover;
          }
        }
      }
    }

    article {
      width: 300px; border: 1px solid #ddd; padding: 30px; margin: 0px auto;

      path {
        fill: transparent;
        stroke: #000;
        stroke-width: 5;
        stroke-dasharray: 1000; //path의 비어있는 공간크기: 빈칸의 크기와 그어지는 선의 크리는 비례해서 증가
        stroke-dashoffset: 1000; //가시영역에서의 선의 시작위치
        transition: fill 1s 0s, stroke-dashoffset 2s 1s;  
        
      }

      &:hover {
        path{
          stroke-dashoffset: 0;  
          fill: rgba(0,0,0,.7); 
          transition: stroke-dashoffset 2s 0s, fill 1s 2s;    
        } 
      }
    }
  }
}

/*
Vector 
-좌표값을 서로 이어서 산술적으로 연산된 그래픽 표현 방법
-장점: 화면 확대,축소시 깨지지 않음
-단점: 선, 면으로 구성되다보니 단순한 형태의 그래픽 위주로 출력

Bitmap
- 픽셀을 조합해서 이미지를 그리는 그래픽 표현 방법
- 장점: 사진같은 풍부한 그래픽을 표현가능
- 단점: 화면을 확대시 계단현상같이 그래픽이 깨짐

SVG (Scalable Vector Graphic) : verctor방식

Canvas : Bitmap 방식
WebGL : 웹에서 3D데이터를 출력하는 라이브러리
Three.js : WebGL 기반으로 3D오브제를 제어해주는 라이브러리
*/